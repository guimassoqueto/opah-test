version: '3.9'

services:
  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: always
    networks:
      - local
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}

  migrate:
    container_name: migrate
    image: migrate/migrate
    networks:
      - local
    volumes:
      - ./migrations:/migrations
    entrypoint: migrate
    command: "-path /migrations -database postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable -verbose up"
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy

  opah-test:
    container_name: opah-test
    build:
      context: .
      dockerfile: Dockerfile
    image: opah-test
    env_file:
      - compose.env
    ports:
      - "${APP_PORT}:${APP_PORT}"
    networks:
      - local
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    expose:
      - ${APP_PORT}
    entrypoint:
      - node
    command: 
      - dist/main/main.js

networks:
  local:
    name: local
    driver: bridge